services:
  db:
    image: mariadb:10.11
    container_name: mariadb
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME:-pmb_db}
      MYSQL_USER: ${DB_USER:-pmb_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-pmb_user}
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-rootpassword}
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root -p${MARIADB_ROOT_PASSWORD:-rootpassword} --silent"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - pmb_network
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
      - "8501:8501"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=mariadb  # Use container_name as hostname
      - DB_NAME=${DB_NAME:-pmb_db}
      - DB_USER=${DB_USER:-pmb_user}
      - DB_PASSWORD=${DB_PASSWORD:-pmb_user}
      - DB_PORT=3306
      - DEBUG=${DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    networks:
      - pmb_network
    restart: unless-stopped
    init: true  # Use tini as init process to handle signals properly
    working_dir: /app
    command: >
      sh -c "
      echo 'Waiting for database...' &&
      until mysqladmin ping -hmariadb -u${DB_USER:-pmb_user} -p${DB_PASSWORD:-pmb_user} --silent; do
        echo 'Waiting for database...';
        sleep 2;
      done &&
      echo 'Database is ready!' &&
      python manage.py migrate &&
      python manage.py init_city_codes &&
      python manage.py collectstatic --noinput --clear &&
      (streamlit run streamlit_app.py --server.port=8501 --server.address=0.0.0.0 &) &&
      python manage.py runserver 0.0.0.0:8000"

networks:
  pmb_network:
    driver: bridge
    attachable: true

volumes:
  mysql_data:
  static_volume:
  media_volume:
