services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - REACT_APP_API_URL=http://web:8000
      - BROWSER=none
      - HOST=0.0.0.0
      - PORT=3000
    networks:
      - pmb_network
    stdin_open: true
    tty: true
    restart: unless-stopped
    depends_on:
      web:
        condition: service_healthy

  db:
    image: mariadb:10.11
    container_name: mariadb
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME:-pmb_db}
      MYSQL_USER: ${DB_USER:-pmb_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-pmb_user}
      MYSQL_ROOT_PASSWORD: rootpassword  # Explicitly set root password
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      MYSQL_INITDB_SKIP_TZINFO: '1'
    ports:
      - "${DB_PORT:-3306}:3306"  # Map container's 3306 to host's 3306 (or specified port)
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/db/initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root -p${MARIADB_ROOT_PASSWORD:-rootpassword} --silent"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - pmb_network
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    environment:
      - DB_HOST=db  # Use service name as hostname
      - DB_NAME=${DB_NAME:-pmb_db}
      - DB_USER=${DB_USER:-pmb_user}
      - DB_PASSWORD=${DB_PASSWORD:-pmb_user}
      - DB_PORT=3306
      - DEBUG=${DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPATH=/app/backend:/app/backend/core:/app/backend/apps:/app/backend/customers
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      - CORS_ORIGIN_WHITELIST=http://localhost:3000,http://localhost:8000
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://localhost:8000
    volumes:
      - ./backend:/app/backend
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
      - "8501:8501"
    networks:
      - pmb_network
    restart: unless-stopped
    init: true  # Use tini as init process to handle signals properly
    working_dir: /app/backend
    command: ["sh", "-c", "dos2unix /app/backend/scripts/entrypoint.sh && chmod +x /app/backend/scripts/entrypoint.sh && exec /app/backend/scripts/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  pmb_network:
    driver: bridge
    attachable: true

volumes:
  mysql_data:
  static_volume:
  media_volume:
